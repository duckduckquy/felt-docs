"use strict";(self.webpackChunkfelt_docs=self.webpackChunkfelt_docs||[]).push([[34],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),f=a,m=c["".concat(s,".").concat(f)]||c[f]||d[f]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7845:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:2},i="Linear",l={unversionedId:"Visualization Reference/Interpolators/linear",id:"Visualization Reference/Interpolators/linear",title:"Linear",description:'{ "linear" Linearly interpolates between stop values less than or equal and greater than the input value',source:"@site/docs-reference/Visualization Reference/Interpolators/linear.md",sourceDirName:"Visualization Reference/Interpolators",slug:"/Visualization Reference/Interpolators/linear",permalink:"/felt-docs/docs-reference/Visualization Reference/Interpolators/linear",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Step",permalink:"/felt-docs/docs-reference/Visualization Reference/Interpolators/step"},next:{title:"Exponential",permalink:"/felt-docs/docs-reference/Visualization Reference/Interpolators/exponential"}},s={},p=[],u={toc:p};function c(e){let{components:n,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"linear"},"Linear"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "linear": Stops[] }'),": Linearly interpolates between stop values less than or equal and greater than the input value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-{"},'  "linear": [\n    [8, 10],\n    [14, 15],\n    [20, 21]\n  ]\n}\n// If zoom level is less than 8, 10 is returned\n// If zoom level is greater or equal than 8 but less than 14, a value linearly interpolated\n// between 10 and 15 is returned\n// If zoom level is greater or equal than 14 but less than 20, a value linearly interpolated // between 15 and 21 is returned\n// If zoom level is greater or equal than 20, 21 is returned\n')),(0,a.kt)("p",null,"The following image shows the behaviour of this definitions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{ "linear": [[0, 0], [100, 100]]} // Blue\n{ "linear": [[0, 0], [50, 50], [100, 100]]} // Red\n{ "linear": [[0, 0], [25, 25], [50, 50], [75, 75], [100, 100]]} // Yellow\n')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Example banner",src:t(1155).Z,width:"2000",height:"1242"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'{ "linear": [number, number] }'),": Expands to ",(0,a.kt)("inlineCode",{parentName:"p"},'{ "linear": [[minZoom, number], [maxZoom, number] }')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{ "linear": [8, 10] }\n// If minZoom is defined as 3 and maxZoom is defined as 20:\n// If zoom level is less than 3, 8 is returned\n// If zoom level is between 3 and 20, a value linearly interpolated between 8 and 10 is\n// returned\n// If zoom level is greater or equal than 20, 10 is returned\n')))}c.isMDXComponent=!0},1155:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/linear-3a82879e5825d3756cb496d4d6e3b34d.png"}}]);