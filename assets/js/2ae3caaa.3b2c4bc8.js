"use strict";(self.webpackChunkfelt_docs=self.webpackChunkfelt_docs||[]).push([[6953],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),f=r,h=u["".concat(s,".").concat(f)]||u[f]||c[f]||o;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},6486:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1},i="Data filters",l={unversionedId:"Filtering/data-filters",id:"Filtering/data-filters",title:"Data filters",description:"Filters have the following form operand1 operator operand2 where the operator is one of `, =, ==, and !=, and operands can be either a numerical value, a string value, or a boolean value. Operators &&, ||, AND, and OR` can be used to chain multiple filters. Parentheses are not supported at this moment. Operands and operators need to be separated by a space.",source:"@site/docs/Filtering/data-filters.md",sourceDirName:"Filtering",slug:"/Filtering/data-filters",permalink:"/felt-docs/docs/Filtering/data-filters",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Filtering",permalink:"/felt-docs/docs/category/filtering"},next:{title:"Zoom-based filters",permalink:"/felt-docs/docs/Filtering/zoom-based filters"}},s={},p=[],d={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-filters"},"Data filters"),(0,r.kt)("p",null,"Filters have the following form ",(0,r.kt)("inlineCode",{parentName:"p"},"operand1 operator operand2")," where the operator is one of ",(0,r.kt)("inlineCode",{parentName:"p"},"<"),", ",(0,r.kt)("inlineCode",{parentName:"p"},">"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<="),", ",(0,r.kt)("inlineCode",{parentName:"p"},">="),", ",(0,r.kt)("inlineCode",{parentName:"p"},"=="),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"!="),", and operands can be either a numerical value, a string value, or a boolean value. Operators ",(0,r.kt)("inlineCode",{parentName:"p"},"&&"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"||"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AND"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"OR")," can be used to chain multiple filters. Parentheses are not supported at this moment. Operands and operators need to be separated by a space."),(0,r.kt)("p",null,"Feature properties can be referenced using the ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," symbol in front of the attribute's name. "),(0,r.kt)("p",null,"String values that contain white spaces should be written in-between escaped double quotes"),(0,r.kt)("p",null,"If the same operator is to be applied to multiple operands, you can use the following array notation: ",(0,r.kt)("inlineCode",{parentName:"p"},"[operand1_1, operand1_2, operand1_3] operator [operand2_1, operand2_2, operand2_3]")," This filter is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"operand1_1 operator operand2_1 AND operand1_2 operator operand2_2 AND operand1_3 operator operand2_3"),". "),(0,r.kt)("p",null,"If one side of the operator is an array and the other isn\u2019t, the single value operator is used multiple times. ",(0,r.kt)("inlineCode",{parentName:"p"},"operand1 operator [operand2_1, operand2_2]")," is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"operand1 operator operand2_1 AND operand1 operator operand2_2"),"."),(0,r.kt)("p",null,"Let\u2019s take a look at some examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"$acres < 50000" // Will filter out features with a value in the attribute\n                 // "acres" higher than 50000\n"$acres >= 50000 && $acres <= 70000"// Will filter out features with a value in       \n                                                                        // the attribute "acres" not in the [50000, \n                                                                        // 7000] interval\n"$class == [rail, tram]"          // Will filter out features that have a\n                                                                    // class value of neither "rail" or "tram"\n"$class == \\"class one\\""         // Will filter out features that have a\n                                                                    // class value different than "class one"\n"true"           // All features will pass this filter check\n"false"          // No features will pass this filter check\n')),(0,r.kt)("p",null,"Examples of the filter syntax"),(0,r.kt)("p",null,"The Railway Tracks and Stations layer in Felt uses a visualization-level filter that applies both to style and label blocks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "config": {"labelAttribute": ["name_en", "name"]},\n    "filter": "$subway == yes OR $railway == subway_entrance",\n  "style": {\n    "color": "hsl(220, 10%, 78%)",\n    "strokeColor": "hsl(220, 10%, 55%)",\n    "strokeWidth": {"linear": [[3, 0.5], [20, 3]]}\n  },\n    "label": {\n    "fontSize": {"linear": [[12, 12], [20, 20]]},\n    "offset": [8, 0]\n  },\n    "legend": {"displayName": "Subway Stations"}\n}\n')),(0,r.kt)("p",null,"Usage of a visualization-level filter. Only applies this visualization to features that have a subway attribute with a value of yes or a railway attribute with a value of subway_entrace."),(0,r.kt)("p",null,"The Earthquakes layer in Felt is a good example of how we can use filters to apply different visualizations to different features"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "version": "1.1",\n  "visualizations": [\n    {\n      "dataset": 405,\n            "config": {},\n            "filter": "$mag >= 8",\n      "style": {\n        "color": "#ab71a4",\n        "size": {"linear": [[3, 2.5], [20, 8]]},\n        "strokeColor": "#824d7c",\n        "strokeWidth": {"linear": [[3, 0.8], [20, 2]]}\n      },\n            "legend": {"displayName": ">= 8.0", "subtitle": "Magnitude"}\n    },\n    {\n      "dataset": 405,\n            "config": {},\n            "filter": "$mag >= 7 AND $mag < 8",\n      "style": {\n        "color": "#d97e99",\n        "size": {"linear": [[3, 2.5], [20, 8]]},\n        "strokeColor": "#ba587a",\n        "strokeWidth": {"linear": [[3, 0.8], [20, 2]]}\n      },\n            "legend": {"displayName": "7.0 - 7.9"}\n    },\n    ...\n  ],\n  "datasets": [ ... ]\n}\n')),(0,r.kt)("p",null,"Simplified Earthquakes style. Notice how the two visualization blocks have different filters applied to them. The first one is applied to features with a mag attribute higher or equal to 8 and the second one is applied to features with a mag attribute in the higher or equal to 7 and lower than 8"))}u.isMDXComponent=!0}}]);