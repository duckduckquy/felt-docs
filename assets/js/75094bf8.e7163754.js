"use strict";(self.webpackChunkfelt_docs=self.webpackChunkfelt_docs||[]).push([[7492],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),d=o,m=c["".concat(p,".").concat(d)]||c[d]||f[d]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},a="Step",s={unversionedId:"Visualization Reference/Interpolators/step",id:"Visualization Reference/Interpolators/step",title:"Step",description:'{ "step" Computes discrete results by evaluating a piecewise-constant function defined by stops on a given input. Returns the output value of the stop with a stop input value just less than the input one. If the input value is less than the input of the first stop, output0 is returned.',source:"@site/docs-reference/Visualization Reference/Interpolators/step.md",sourceDirName:"Visualization Reference/Interpolators",slug:"/Visualization Reference/Interpolators/step",permalink:"/felt-docs/docs-reference/Visualization Reference/Interpolators/step",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Interpolator",permalink:"/felt-docs/docs-reference/category/interpolator"},next:{title:"Linear",permalink:"/felt-docs/docs-reference/Visualization Reference/Interpolators/linear"}},p={},l=[],u={toc:l};function c(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"step"},"Step"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'{ "step": [output0, Stops[]] }'),": Computes discrete results by evaluating a piecewise-constant function defined by stops on a given input. Returns the output value of the stop with a stop input value just less than the input one. If the input value is less than the input of the first stop, ",(0,o.kt)("inlineCode",{parentName:"p"},"output0")," is returned."),(0,o.kt)("p",null,"Stops are defined as pairs of ",(0,o.kt)("inlineCode",{parentName:"p"},"[zoom, value]")," where ",(0,o.kt)("inlineCode",{parentName:"p"},"zoom")," is the minimum zoom level where ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," is returned and ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," can be ",(0,o.kt)("inlineCode",{parentName:"p"},"number | string | boolean"),". Note that stops need to be defined by increasing zoom level."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{ "step": ["hsl(50,5%,72%)", [[9, "hsl(10,75%,75%)"]] }\n// If zoom level is less than 9, "hsl(50,5%,72%)" will be returned\n// If zoom level is equal or higher than 9, "hsl(10,75%,75%)" will be returned\n')),(0,o.kt)("p",null,"The following image shows the behaviour of this definitions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{ "step": [0, [[0, 0], [100, 100]]]} // Blue\n{ "step": [0, [[0, 0], [50, 50], [100, 100]]]} // Red\n{ "step": [0, [[0, 0], [25, 25], [50, 50], [75, 75], [100, 100]]]} // Yellow\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example banner",src:n(5764).Z,width:"2000",height:"1231"})))}c.isMDXComponent=!0},5764:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/step-8661156d7c5690c2e84dc62be40a6195.png"}}]);